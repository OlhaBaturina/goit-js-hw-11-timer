{"version":3,"sources":["js/index.js"],"names":["daysRef","document","querySelector","hoursRef","minsRef","secsRef","titleRef","bodyRef","CountdownTimer","selector","targetDate","init","startTimer","start","setInterval","currentTime","Date","now","deltaTime","time","getTimeComponents","updateClockface","stop","clearInterval","textContent","add","classlist","days","pad","Math","floor","hours","mins","secs","value","String","padStart"],"mappings":";;;AA4DA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA5DA,QAAA,oBAEA,IAAMA,EAAUC,SAASC,cAAc,uBACjCC,EAAWF,SAASC,cAAc,wBAClCE,EAAUH,SAASC,cAAc,uBACjCG,EAAUJ,SAASC,cAAc,uBACjCI,EAAWL,SAASC,cAAc,oBAClCK,EAAUN,SAASC,cAAc,QAEjCM,EAAAA,WACkC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC/BD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,OA+CT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OA5CE,MAAA,WAAO,IAAA,EAAA,KACAC,KAAAA,aACAC,KAAAA,MAAQC,YAAY,WACvB,EAAKF,cACJ,OAwCP,CAAA,IAAA,aArCE,MAAA,WACQG,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,KAAKR,WAAaK,EAC9BI,EAAO,KAAKC,kBAAkBF,GAC/BG,KAAAA,gBAAgBF,GAChBG,KAAAA,KAAKH,KAgCd,CAAA,IAAA,OA7BE,MAAA,SAAKA,GACCA,GAAQ,IACVI,cAAc,KAAKV,OACnBP,EAASkB,YAAc,2BACvBjB,EAAQkB,IAAIC,UAAY,WAyB9B,CAAA,IAAA,oBArBE,MAAA,SAAkBP,GAMT,MAAA,CAAEQ,KALI,KAAKC,IAAIC,KAAKC,MAAMX,EAAQ,QAK1BY,MAJD,KAAKH,IAAIC,KAAKC,MAAOX,EAAQ,MAAyB,OAI9Ca,KAHT,KAAKJ,IAAIC,KAAKC,MAAOX,EAAQ,KAAoB,MAGlCc,KAFf,KAAKL,IAAIC,KAAKC,MAAOX,EAAQ,IAAc,SAiB5D,CAAA,IAAA,kBAZE,MAAA,SAA6C,GAA3BQ,IAAAA,EAAAA,EAAAA,KAAMI,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KACnCjC,EAAQwB,YAAiBG,GAAAA,OAAAA,GACzBxB,EAASqB,YAAiBO,GAAAA,OAAAA,GAC1B3B,EAAQoB,YAAiBQ,GAAAA,OAAAA,GACzB3B,EAAQmB,YAAiBS,GAAAA,OAAAA,KAQ7B,CAAA,IAAA,MALE,MAAA,SAAIC,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAIrC,EAnDM5B,GAmDN,IAAIA,EAAe,CACjBC,SAAU,WACVC,WAAY,IAAIM,KAAK","file":"js.507801f3.js","sourceRoot":"../src","sourcesContent":["import '../css/style.css';\n\nconst daysRef = document.querySelector('[data-value=\"days\"]');\nconst hoursRef = document.querySelector('[data-value=\"hours\"]');\nconst minsRef = document.querySelector('[data-value=\"mins\"]');\nconst secsRef = document.querySelector('[data-value=\"secs\"]');\nconst titleRef = document.querySelector('.countdown-title');\nconst bodyRef = document.querySelector('body');\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.init();\n  }\n\n  init() {\n    this.startTimer();\n    this.start = setInterval(() => {\n      this.startTimer();\n    }, 1000);\n  }\n\n  startTimer() {\n    const currentTime = Date.now();\n    const deltaTime = this.targetDate - currentTime;\n    const time = this.getTimeComponents(deltaTime);\n    this.updateClockface(time);\n    this.stop(time);\n  }\n\n  stop(time) {\n    if (time <= 0) {\n      clearInterval(this.start);\n      titleRef.textContent = 'Happy Birthday, my Baby!';\n      bodyRef.add.classlist = '.time';\n    }\n  }\n\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n  }\n\n  updateClockface({ days, hours, mins, secs }) {\n    daysRef.textContent = `${days}`;\n    hoursRef.textContent = `${hours}`;\n    minsRef.textContent = `${mins}`;\n    secsRef.textContent = `${secs}`;\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nnew CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('10 30, 2021'),\n});\n"]}